<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.CategoryMapper">
  <resultMap id="BaseResultMap" type="com.domain.Category">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="turn" jdbcType="INTEGER" property="turn" />
    <result column="en_name" jdbcType="VARCHAR" property="enName" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
  </resultMap>

  <sql id="Base_Column_List">
    id, turn, en_name, `name`, description, parent_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from d_category
    where id = #{id,jdbcType=INTEGER}
  </select>
  <resultMap id="selectCurrentLevelMap" type="Category" extends="BaseResultMap">
    <id property="id" column="cid"/>
    <result property="name" column="cname" />
    <result property="enName" column="cename" />
    <result property="turn" column="cturn"  />
    <result property="parentId" column="cparentid"/>
    <collection property="categoryList" javaType="list" fetchType="eager" ofType="Category">
      <id property="id" column="scid"/>
      <result property="name" column="scname"/>
      <result property="enName" column="scename"/>
      <result property="parentId" column="scparentid" />
    </collection>
  </resultMap>
  <!-- 进行自连接查询（分层目录） -->
  <select id="selectOneLevel" parameterType="integer" resultMap="selectCurrentLevelMap" >
    SELECT c.id AS cid,
           c.name AS cname,
           c.en_name AS cename,
           c.turn AS cturn,
           c.parent_id AS cparentid,
           sc.id AS scid,
           sc.name AS scname ,
           sc.en_name AS scename,
           sc.parent_id AS scparentid
    FROM d_category c
           LEFT JOIN  d_category sc
                      ON c.id=sc.parent_id
    WHERE sc.parent_id=#{id}
  </select>

  <resultMap id="selectLevelMap" type="Category" extends="BaseResultMap">
      <id property="id" column="cid"/>
      <result property="name" column="cname" />
      <result property="enName" column="cename" />
      <result property="turn" column="cturn"  />
      <result property="parentId" column="cparentid"/>
    <collection property="categoryList" javaType="list" fetchType="eager" ofType="Category">
      <id property="id" column="scid"/>
      <result property="name" column="scname"/>
      <result property="enName" column="scename"/>
      <result property="parentId" column="scparentid" />
    </collection>
  </resultMap>

  <!-- 进行自连接查询（获取二级目录及其子目录） -->
  <select id="selectLevel" resultType="list" resultMap="selectLevelMap" >
    SELECT c.id AS cid,
           c.name AS cname,
           c.en_name AS cename,
           c.turn AS cturn,
           c.parent_id AS cparentid,
           sc.id AS scid,
           sc.name AS scname ,
           sc.en_name AS scename,
           sc.parent_id AS scparentid
    FROM d_category c
           LEFT JOIN  d_category sc
                      ON c.id=sc.parent_id
    <!-- 如果不写AND sc.parent_id会出现把所有的目录都放进list里面
         但是如果写了就会清楚没有次级目录的目录，但是并不知道为什么这么写
         如果直接判断不能为null，是没有任何效果的
     -->
    WHERE c.id!=1 AND sc.parent_id;
  </select>
  <!--<resultMap id="catalogAllInfoMap" type="Category" extends="BaseResultMap">-->
      <!--<id property="id" column="cid"/>-->
      <!--<result property="name" column="cname"/>-->
      <!--<result property="enName" column="cename"/>-->
      <!--<result property="parentId" column="cparentid"/>-->
    <!--<collection property="productList" javaType="list" fetchType="eager" ofType="Product" >-->
      <!--<id property="id" column="dpid"/>-->
      <!--<result property="productName" column="dpproductname"/>-->
      <!--<result property="description" column="dpdescription"/>-->
      <!--<result property="addTime" column="dpaddtime"/>-->
      <!--<result property="fixedPrice" column="dpfixedprice"/>-->
      <!--<result property="dangPrice" column="dpdangprice"/>-->
      <!--<result property="productPic" column="dproductpic"/>-->
      <!--<association property="book" javaType="Book" fetchType="eager" select="liangbiaochaxun">-->
          <!--<id property="" column="dbid"/>-->
          <!--<result property="author" column="dbauthor"/>-->
          <!--<result property="author_summary" column="dbauthorsummary"/>-->
          <!--<result property="publish_time" column="dbpublishtime"/>-->
          <!--<result property="publishing" column="dbpublishing"/>-->
        <!--<result property="catalogue" column="dbcatalogue"/>-->
      <!--</association>-->
    <!--</collection>-->
  <!--</resultMap>-->
  <resultMap id="catalogAllInfoMap" type="Category" extends="BaseResultMap">
    <id property="id" column="cid"/>
    <result property="name" column="cname"/>
    <result property="enName" column="cename"/>
    <result property="parentId" column="cparentid"/>
    <collection property="productList" javaType="list" fetchType="eager" ofType="CategoryBookProduct">
      <id property="id" column="dpid"/>
      <result property="productName" column="dpproductname"/>
      <result property="description" column="dpdescription"/>
      <result property="addTime" column="dpaddtime"/>
      <result property="fixedPrice" column="dpfixedprice"/>
      <result property="dangPrice" column="dpdangprice"/>
      <result property="productPic" column="dproductpic"/>
      <result property="author" column="dbauthor"/>
      <result property="authorSummary" column="dbauthorsummary"/>
      <result property="publishTime" column="dbpublishtime"/>
      <result property="publishing" column="dbpublishing"/>
      <result property="catalogue" column="dbcatalogue"/>

    </collection>
  </resultMap>
  <!-- 四表联查询对应目录下的图书的所有信息 -->
  <select id="catalogAllInfo" parameterType="integer" resultMap="catalogAllInfoMap">
    SELECT c.id AS cid,
           c.name AS cname,
           c.en_name AS cename,
           c.parent_id AS cparentid,
           dp.id AS dpid,
           dp.product_name AS dpproductname,
           dp.description AS dpdescription,
           dp.add_time AS dpaddtime,
           dp.fixed_price AS dpfixedprice,
           dp.dang_price AS dpdangprice,
           dp.product_pic AS dproductpic,
           db.author AS dbauthor,
           db.author_summary AS dbauthorsummary,
           db.publish_time AS dbpublishtime,
           db.publishing AS dbpublishing,
           db.catalogue AS dbcatalogue
    FROM d_category c
           LEFT JOIN d_category_product cp
                     ON c.id = cp.cat_id
           LEFT JOIN d_product dp
                     ON cp.product_id = dp.id
           LEFT JOIN d_book db
                     ON dp.id = db.id
    WHERE c.id = #{catId} LIMIT #{curPage},5;
  </select>
    <select id="categoryAllPage" resultType="java.lang.Integer" parameterType="integer">
        SELECT COUNT(*)
        FROM d_category c
        LEFT JOIN d_category_product dcp
        ON  dcp.cat_id = c.id
        LEFT JOIN d_product dp
        ON dp.id = dcp.product_id
        WHERE c.id = #{id}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from d_category
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.domain.Category" useGeneratedKeys="true">
    insert into d_category (turn, en_name, `name`, 
      description, parent_id)
    values (#{turn,jdbcType=INTEGER}, #{enName,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{parentId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.domain.Category" useGeneratedKeys="true">
    insert into d_category
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="turn != null">
        turn,
      </if>
      <if test="enName != null">
        en_name,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="turn != null">
        #{turn,jdbcType=INTEGER},
      </if>
      <if test="enName != null">
        #{enName,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.domain.Category">
    update d_category
    <set>
      <if test="turn != null">
        turn = #{turn,jdbcType=INTEGER},
      </if>
      <if test="enName != null">
        en_name = #{enName,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.domain.Category">
    update d_category
    set turn = #{turn,jdbcType=INTEGER},
      en_name = #{enName,jdbcType=VARCHAR},
      `name` = #{name,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>